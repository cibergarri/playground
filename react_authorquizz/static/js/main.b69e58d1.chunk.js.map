{"version":3,"sources":["AuthorQuizz.js","AddAuthorForm.js","serviceWorker.js","index.js"],"names":["Hero","props","react_default","a","createElement","className","now","Book","_ref","title","onClick","Turn","_ref2","author","books","highlight","onAnswerSelected","style","backgroundColor","none","correct","wrong","highlightToBgColor","src","imageUrl","alt","map","key","Continue","_ref3","show","onContinue","Footer","id","href","AuthorQuizz","connect","state","turnData","dispatch","answer","type","_ref4","Object","assign","Link","to","concat","process","AuthorForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","name","bookTemp","onFieldChange","bind","assertThisInitialized","handleSubmit","handleAddBook","event","setState","defineProperty","target","value","preventDefault","onAddAuthor","onSubmit","htmlFor","onChange","book","React","Component","withRouter","history","push","match","AddAuthorForm_AuthorForm","Boolean","window","location","hostname","authors","imageSource","getTurnData","allBooks","reduce","p","c","i","fourRandomBooks","shuffle","slice","sample","find","some","store","Redux","arguments","length","undefined","action","isCorrect","console","log","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","BrowserRouter","basename","es","Fragment","Route","exact","path","component","AddAuthorForm","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b69e58d1.chunk.js","sourcesContent":["import React  from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// import logo from './logo.svg';\nimport './App.css';\nimport './bootstrap.min.css';\n\nfunction Hero(props) {\n  return(<div className=\"row\">\n    <div className=\"jumbotron col-10 offset-1\">\n      <h1>Author Quizz. Date: {props.now}</h1>\n      <p>Select the book written by the author shown</p>\n    </div>\n  </div>);\n}\nfunction Book({title, onClick}) {\n  return (<div className=\"answer\" onClick={() => {onClick(title);}}>\n    <h4>{title}</h4>\n  </div>)\n}\nfunction Turn({author, books, highlight, onAnswerSelected}) {\n  function highlightToBgColor(highlight) {\n    const mapping = {\n      'none': '',\n      'correct': 'green',\n      'wrong': 'red',\n    };\n    return mapping[highlight];\n  }\n  return (<div className=\"row turn\" style={{backgroundColor: highlightToBgColor(highlight)}}>\n    <div className=\"col-4 offset-1\">\n      <img src= {author.imageUrl} className=\"authorimage\" alt= \"Author\" />\n    </div>\n    <div className=\"col-6\">\n      {books.map((title) => <Book title={title} key={title} onClick={onAnswerSelected}/>)}\n    </div>\n  </div>);\n}\nTurn.propTypes = {\n  author: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    imageSource: PropTypes.string,\n    books: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }),\n  books: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  highlight: PropTypes.string.isRequired,\n}\nfunction Continue({show, onContinue}) {\n  return (<div className= 'row continue'>\n  { show\n    ? <div className='col-11'>\n      <button className='btn btn-primary btn-lg float-right' onClick={onContinue}>Continue</button>\n    </div>\n    : null\n  }\n  </div>);\n}\nfunction Footer() {\n  return(\n  <div id=\"footer\" className=\"row\">\n    <div className=\"col-12\">\n      <p className=\"text-muted credit\">All images are from <a href=\"https://commons.wikimedia.org/wiki/Main_Page\">Wikimedia Commons</a> and are in the public domain</p>\n    </div>\n  </div>\n  );\n}\n\nconst mapStateToProps= (state) => {\n  return {\n    turnData: state.turnData,\n    highlight: state.highlight,\n    now: state.now,\n  };\n};\nconst mapDispatchToProps= (dispatch) => {\n  return {\n    onAnswerSelected: (answer) => dispatch({type: 'ANSWER_SELECTED', answer }),\n    onContinue: () => { dispatch({ type: 'CONTINUE'})},\n  }\n};\n\nconst AuthorQuizz = connect(mapStateToProps, mapDispatchToProps)(\n  function({turnData, highlight, onAnswerSelected, onContinue, now}) {\n    return (\n      <div className=\"container-fluid\">\n        <Hero now={now}/>\n        <Turn {...turnData} highlight={highlight} onAnswerSelected={onAnswerSelected}/>\n        <Continue show={highlight==='correct'} onContinue={onContinue}/>\n        <p><Link to={`${process.env.PUBLIC_URL}/add`}>Add an author</Link></p>\n        <Footer />\n      </div>\n    );\n  }\n)\n\n\nexport default AuthorQuizz;\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './AddAuthorForm.css';\r\n\r\nclass AuthorForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            imageUrl:'',\r\n            books:[],\r\n            bookTemp:'',\r\n        }\r\n        this.onFieldChange = this.onFieldChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleAddBook = this.handleAddBook.bind(this);\r\n    }\r\n    onFieldChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.onAddAuthor(this.state);\r\n    }\r\n    handleAddBook(event) {\r\n        this.setState({\r\n            books: this.state.books.concat([this.state.bookTemp]),\r\n            bookTemp:'',\r\n        })\r\n    }\r\n    render() {\r\n        return <form onSubmit={this.handleSubmit}>\r\n        <div className='AddAuthorForm__input'>\r\n              <label htmlFor='name'>Name</label>\r\n              <input type='text' name='name' value={this.state.name} onChange ={this.onFieldChange}/>\r\n        </div>\r\n        <div className='AddAuthorForm__input'>\r\n              <label htmlFor='imageUrl'>Image URL</label>\r\n              <input type='text' name='imageUrl' value={this.state.imageUrl} onChange ={this.onFieldChange}/>\r\n        </div>\r\n        <div className='AddAuthorForm__input'>\r\n            {this.state.books.map((book) => <p key={book}>{book}</p>)}\r\n            <label htmlFor='bookTemp'>Books</label>\r\n            <input type='text' name='bookTemp' value={this.state.bookTemp} onChange ={this.onFieldChange}/>\r\n            <input type='button' value='+' onClick ={this.handleAddBook}/>\r\n        </div>\r\n        <input type='submit' value='Add'/>\r\n    </form>\r\n    }\r\n}\r\n\r\nfunction AddAuthorForm({match, onAddAuthor}) {\r\n    return <div className='AddAuthorForm'>\r\n        <h1>Add Author</h1>\r\n        <AuthorForm onAddAuthor={onAddAuthor}/>\r\n        {/*<p>{JSON.stringify(match)}</p>*/}\r\n        \r\n    </div>\r\n}\r\nfunction mapDispatchToProps(dispatch, props) {\r\n    return {\r\n        onAddAuthor: (author) => {\r\n            dispatch({ type: 'ADD_AUTHOR', author });\r\n            props.history.push('/');\r\n        }\r\n    }\r\n}\r\nexport default withRouter(\r\n    connect(() => ({}), mapDispatchToProps)(\r\n        AddAuthorForm));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter} from 'react-router-dom';\nimport * as Redux from 'redux';\nimport *as ReactRedux from 'react-redux';\nimport './index.css';\nimport AuthorQuizz from './AuthorQuizz';\nimport AddAuthorForm from './AddAuthorForm';\nimport * as serviceWorker from './serviceWorker';\nimport { shuffle, sample } from 'underscore';\n\nconst authors = [\n    {\n        name: 'Mark Twain',\n        imageUrl: 'images/authors/marktwain.jpg',\n        imageSource: 'Wikimedia Commons',\n        books: [\n            'The adventures of Huckleberry Finn',\n            'Life on the Mississippi',\n            'Roughing It',\n        ],\n    },\n    {\n        name: 'Charles Dickens',\n        imageUrl: 'images/authors/charlesdickens.jpg',\n        imageSource: 'Wikimedia Commons',\n        books: ['Oliver Twist', 'David CopperField', 'A Tale of Two Cities'],\n    },\n    {\n        name: 'J.K. Rowling',\n        imageUrl: 'images/authors/jkrowling.jpg',\n        imageSource: 'Wikimedia Commons',\n        books: ['Harry Potter saga'],\n    },\n    {\n        name: 'Joseph Conrad',\n        imageUrl: 'images/authors/josephconrad.jpg',\n        imageSource: 'Wikimedia Commons',\n        books: ['Heart of Darkness'],\n    },\n    {\n        name: 'Stephen King',\n        imageUrl: 'images/authors/stephenking.jpg',\n        imageSource: 'Wikimedia Commons',\n        books: ['Carrie', 'The Shining', 'IT'],\n    },\n    {\n        name: 'William Shakespeare',\n        imageUrl: 'images/authors/williamshakespeare.jpg',\n        imageSource: 'Wikimedia Commons',\n        books: ['Hamlet', 'Macbeth', 'Romeo And Juliet'],\n    },\n];\n\nfunction getTurnData(authors) {\n    const allBooks = authors.reduce((p, c, i) => {\n        return p.concat(c.books);\n    } ,[]);\n    const fourRandomBooks = shuffle(allBooks).slice(0,4);\n    const answer = sample(fourRandomBooks);\n    return {\n        books:fourRandomBooks,\n        author: authors.find((author) => author.books.some((title) => title === answer))\n    };\n}\n\n\nfunction reducer(state= { authors, turnData: getTurnData(authors), highlight:''}, action) {\n    switch(action.type) {\n        case 'ANSWER_SELECTED':\n            const isCorrect = state.turnData.author.books.some((book) => book === action.answer);\n            return Object.assign({}, state, {highlight: isCorrect ? 'correct' : 'wrong' });\n        case 'CONTINUE':\n            return Object.assign({}, state, {\n                highlight: '',\n                turnData: getTurnData(state.authors),\n            });\n        case 'ADD_AUTHOR':\n            console.log(action.author);\n            return Object.assign({}, state, {\n                authors: state.authors.concat([action.author]),\n            });\n        default: return state;\n    }\n}\n\nlet store = Redux.createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n    <BrowserRouter basename={'/'}>\n        <ReactRedux.Provider store= {store}>\n            <React.Fragment>\n                <Route exact path={`${process.env.PUBLIC_URL}/`} component={AuthorQuizz} />\n                <Route path={`${process.env.PUBLIC_URL}/add`} component={AddAuthorForm} />\n            </React.Fragment>\n        </ReactRedux.Provider>\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}